"Pass: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on Passing",
show.values = TRUE)
dat_prop <- train_predictions %>%
mutate(dataset = "train") %>%
bind_rows(test_predictions %>% mutate(dataset = "test")) %>%
mutate(dataset = fct_relevel(dataset, "train")) %>%
arrange(propensity) %>%
select(no_npe, all_pass, dialogue, student, session, dataset, propensity,
any_non_submission) %>%
mutate(weight = propensity) # FIXME
dat_prop %>%
ggplot(aes(x = propensity, fill = factor(dialogue), group = dialogue)) +
geom_density(alpha = 0.5, position = "dodge") +
# geom_point(aes(y = dialogue, color = factor(dialogue))) +
xlim(c(0,1)) +
theme_minimal() +
viridis::scale_fill_viridis(
option = "G",
discrete = T,
labels = c("No dialogue", "Dialogue"),
name = "") +
viridis::scale_color_viridis(option = "G", discrete = T) +
xlab("Propensity score") +
facet_grid(dataset ~ .) +
ggtitle("Fitting propensity score model")
WEIGHT_SCALE <- 10 # a bit hacky to use binomial regression
glm_causal <- function(d) {
glm(
no_npe ~ dialogue,
data = d,
weights = round(d$weight * WEIGHT_SCALE, 0),
family = binomial(link = "logit")
)
}
glm_causal.pass <- function(d) {
glm(
all_pass ~ dialogue,
data = d,
weights = round(d$weight * WEIGHT_SCALE, 0),
family = binomial(link = "logit")
)
}
mod.causal <- glm_causal(dat_prop)
mod.causal.pass <- glm_causal.pass(dat_prop)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.values = TRUE)
plot_models(
mod.simple.glm.pass,
mod.salad.glm.pass,
mod.causal.pass,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"Pass: Single predictor regression",
"Pass: Causal salad",
"Pass: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on Passing",
show.values = TRUE)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.values = TRUE)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE") +
scale_y_continuous(c(0.5, 4))
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE") +
scale_y_continuous(c(0.5, 5))
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE") +
scale_y_continuous(limits = c(0.5, 5))
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE")
plot_models(
mod.simple.glm.pass,
mod.salad.glm.pass,
mod.causal.pass,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"Pass: Single predictor regression",
"Pass: Causal salad",
"Pass: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on Passing",
show.values = TRUE)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.values = TRUE,
show.intercept = T)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.values = TRUE,
show.p = T)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.p = T)
plot_models(
mod.simple.glm,
mod.salad.glm,
mod.causal,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"NPE: Single predictor regression",
"NPE: Causal salad",
"NPE: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on no NPE",
show.values = T,
show.p = F)
# final reporting one
plot_models(
mod.causal.pass, mod.causal,
m.labels = c("All Pass", "No FW"),
show.values = TRUE,
dot.size = 3,
spacing = 0.5,
colors = csu_colours
) +
ggthemes::theme_tufte() +
theme(
text = element_text(size = 16),
axis.text.y = element_text(size = 20),
axis.line = element_line(size = 1)
)
# final reporting one
plot_models(
mod.causal.pass, mod.causal,
m.labels = c("All Pass", "No FW"),
show.values = TRUE,
dot.size = 3,
spacing = 0.5,
colors = csu_colours
) +
# ggthemes::theme_tufte() +
theme(
text = element_text(size = 16),
axis.text.y = element_text(size = 20),
axis.line = element_line(size = 1)
)
plot_models(
mod.simple.glm.pass,
mod.salad.glm.pass,
mod.causal.pass,
# axis.lim = c(1, 3),
rm.terms = c("gpa", "age", "summer_course",
"low_ses", "regional_or_remote",
"indigenous", "domestic", "commencing", "any_non_submission"),
# terms = c("dialogueTRUE"),
m.labels = c(
"Pass: Single predictor regression",
"Pass: Causal salad",
"Pass: Inverse propensity score weighted"),
spacing = 0.3,
legend.title = "Models",
title = "Model comparisons of dialogue effect on Passing",
show.values = TRUE, show.p = FALSE)
jtools::plot_summs(mod.causal.pass)
install.packages("broom.mixed")
jtools::plot_summs(mod.causal.pass, mod.causal)
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9)
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.5)
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9)
jtools::plot_summs(
mod.simple.glm,
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9)
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9,
plot.distributions = T)
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9,
scale = T)
?plot_summs
jtools::plot_summs(
mod.causal.pass,
mod.causal,
inner_ci_level = 0.9,
scale = T,
coefs = "dialogue")
jtools::plot_summs(
mod.causal,
mod.simple.glm,
mod.salad.glm,
inner_ci_level = 0.9,
scale = T,
coefs = "dialogue")
jtools::plot_summs(
mod.causal,
mod.simple.glm,
mod.salad.glm,
model.names = c("IPSW", "Simple", "Salad"),
inner_ci_level = 0.9,
scale = T,
coefs = "dialogue")
?jtools::plot_summs
jtools::plot_summs(
mod.causal,
mod.simple.glm,
mod.salad.glm,
model.names = c("IPSW", "Simple", "Salad"),
inner_ci_level = 0.9,
scale = T,
coefs = "dialogue",
exp = TRUE)
?jtools::plot_summs
jtools::plot_summs(
mod.causal,
mod.simple.glm,
mod.salad.glm,
model.names = c("IPSW", "Simple", "Salad"),
inner_ci_level = 0.9,
scale = T,
coefs = "dialogue",
exp = TRUE)
jtools::plot_summs(
mod.causal,
mod.simple.glm,
mod.salad.glm,
model.names = c("IPSW", "Simple", "Salad"),
inner_ci_level = 0.9,
coefs = "dialogue",
exp = TRUE)
jtools::plot_coefs(mod.causal)
?jtools::plot_coefs(mod.causal)
library(brms)
brm.causal.pass <- brm(
formula = all_pass | weights(weight) ~ dialogue,
data = dat_prop,
family = bernoulli()
)
brm.causal.pass
jtools::plot_summs(brm.causal.pass)
jtools::plot_summs(brm.causal.pass, mod.causal.pass)
jtools::plot_summs(mod.causal.pass)
jtools::plot_summs(mod.causal.pass, brm.causal.pass)
jtools::plot_summs(brm.causal.pass)
library(jtools)
plot_summs(brm.causal.pass)
plot_summs(brm.causal.pass, mod.causal.pass)
?plot_summs
?jtools::effect_plot
effect_plot(brm.causal.pass, dialogue)
plot(brm.causal.pass)
dat_prop
datn_cln
brm.salad.pass <- brm(
formula = all_pass  ~ dialogue + commencing + age + nesb + female + domestic + indigenous + low_ses + disability + regional_or_remote + on_campus + summer_course,
data = datn_cln,
family = bernoulli()
)
brm.salad.pass
plot_summs(brm.salad.pass)
plot_summs(brm.salad.pass, inner_ci_level = 0.9)
mcmc_plot(brm.salad.pass)
datn_cln_scl <- scale(datn_cln)
datn_cln_scl
datn_cln
datn_cln_scl <- datn_cln %>%
mutate(across(everything(), scale))
datn_cln_scl <- datn_cln %>% select(-student) %>% scale()
datn_cln_scl <- datn_cln %>%
mutate(across(-student, scale))
datn_cln_scl
datn_cln_scl <- datn_cln %>%
mutate(across(-student, ~as.numeric(scale(.))))
datn_cln_scl
brm.simple.pass <- brm(
formula = all_pass ~ dialogue,
data = datn_cln_scl,
family = bernoulli()
)
mcmc_plot(brm.simple.pass)
brm.simple.pass <- brm(
formula = all_pass ~ dialogue,
data = datn_cln,
family = bernoulli()
)
mcmc_plot(brm.simple.pass)
datn_cln
datn_cln %>% count(session)
datn_cln_sesh <- datn_cln %>%
mutate(
s1 = as.numeric(session == 202030),
s2 = as.numeric(session == 202060),
s3 = as.numeric(session == 202090)
)
datn_cln_sesh <- dat_prop %>%
mutate(
s1 = as.numeric(session == 202030),
s2 = as.numeric(session == 202060),
s3 = as.numeric(session == 202090)
)
datn_cln_sesh
dat_prop %>% count(session)
dat_prop <- train_predictions %>%
mutate(dataset = "train") %>%
bind_rows(test_predictions %>% mutate(dataset = "test")) %>%
mutate(dataset = fct_relevel(dataset, "train")) %>%
arrange(propensity) %>%
select(no_npe, all_pass, dialogue, student, session, dataset, propensity,
any_non_submission) %>%
mutate(weight = 1 / propensity)
datn_cln_sesh <- dat_prop %>%
mutate(
s1 = as.numeric(session == 202030),
s2 = as.numeric(session == 202060),
s3 = as.numeric(session == 202090)
)
datn_cln_sesh <- dat_prop %>%
mutate(
s1 = as.numeric(session == 202030),
s2 = as.numeric(session == 202060),
s3 = as.numeric(session == 202090)
)
datn_cln_sesh
brm.ipsw.pass.sesh <- brm(
formula = all_pass | weights(weight) ~ dialogue + s1 + s2 + s3,
data = dat_cln_sesh,
family = bernoulli()
)
brm.ipsw.pass.sesh <- brm(
formula = all_pass | weights(weight) ~ dialogue + s1 + s2 + s3,
data = datn_cln_sesh,
family = bernoulli()
)
mcmc_plot(brm.ipsw.pass.sesh)
datn_cln_sesh
brm.ipsw.pass.sesh <- brm(
formula = all_pass | weights(weight) ~ dialogue + (1 | s1 + s2 + s3),
data = datn_cln_sesh,
family = bernoulli()
)
brm.ipsw.pass.sesh
mcmc_plot(brm.ipsw.pass.sesh)
library(lme4)
glm.ipsw.pass.sesh <- glmer(
formula = all_pass | weights(weight) ~ dialogue + (1 | s1 + s2 + s3),
data = datn_cln_sesh,
family = bernoulli()
)
glm.ipsw.pass.sesh <- glmer(
formula = all_pass | weights(weight) ~ dialogue + (1 | s1 + s2 + s3),
data = datn_cln_sesh,
family = binomial()
)
glm.ipsw.pass.sesh <- glmer(
formula = all_pass | weights(weight) ~ dialogue + (1 | s1 + s2 + s3),
data = datn_cln_sesh,
family = binomial()
)
glm.ipsw.pass.sesh <- glmer(
formula = all_pass | weights(weight) ~ dialogue + (1 | s1 + s2 + s3),
data = datn_cln_sesh
)
